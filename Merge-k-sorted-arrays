/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        if (lists == null || lists.length == 0) return null;

 PriorityQueue<Integer> pq = new PriorityQueue<>();
for (int i = 0; i < lists.length; i++) {
            ListNode current = lists[i];
            while (current != null) {
                pq.offer(current.val);

 current = current.next;
            }
        }

        
        ListNode dummy = new ListNode(-1);
        ListNode tail = dummy;

         while (!pq.isEmpty()) {
            tail.next = new ListNode(pq.poll());
            tail = tail.next;
        }

        return dummy.next;
    }
}
